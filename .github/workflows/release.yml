name: Release plugin

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

jobs:

  build:
    uses: ./.github/workflows/base-ci.yml
    secrets: inherit
    permissions:
      contents: read
      checks: write
      issues: read
      pull-requests: write
      packages: write

  create-release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      pull-requests: write

    steps:

      - name: Clone project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Get version
        id: release-version
        run: |
          echo "version=$(grep 'version=' gradle.properties | cut -d '=' -f 2)" >> $GITHUB_OUTPUT

      - name: Create Release Branch
        run: |
          RELEASE_BRANCH=release/${{ steps.release-version.outputs.version }}
          git checkout -b release/${RELEASE_BRANCH}
          git push origin release/${RELEASE_BRANCH}
          echo "Created release branch: ${RELEASE_BRANCH}"

      - name: Publish plugin
        run: ./gradlew publishPlugins --parallel --console=plain
          -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}
          -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
          -m

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: release } = await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: ${{ steps.release-version.outputs.version }},
              name: ${{ steps.release-version.outputs.version }},
              body: 'Release ${{ steps.release-version.outputs.version }}',
              draft: true,
              prerelease: true
            });
            console.log(`Created release: ${release.data.html_url}`);

      - name: Create PR main to develop
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Merge main to develop',
              head: 'main',
              base: 'develop',
              body: 'Merge main to develop'
            });
            console.log(`Created PR: ${pr.data.html_url}`);
