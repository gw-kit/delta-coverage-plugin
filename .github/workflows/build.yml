name: Build

on:
  workflow_call:
  push:
    branches:
      - 'develop'
      - 'main'
      - 'release/**'
  pull_request:
    branches:
      - '**'

jobs:

  build-and-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      packages: write

    env:
      GH_USER: ${{ github.actor }}
      GH_TOKEN: ${{ github.token }}
      gradle_cmd: ./gradlew --parallel -Pci
        --build-cache --configuration-cache
        --console=plain

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: ‚öôÔ∏èBuild & Test
        run: ${{ env.gradle_cmd }} build detektMain detektTest --continue

      - name: Check publish
        id: publish-snapshot
        uses: actions/github-script@v8
        with:
          script: |
            const hasLabel = ${{ contains(github.event.pull_request.labels.*.name, 'publish-snapshot-artifacts') }};
            const isPushEvent = ${{ github.event_name == 'push' }};
            const isDevelopBranch = ${{ github.ref == 'refs/heads/develop' }};
            const shouldPublish = hasLabel || (isPushEvent && isDevelopBranch);
            core.setOutput('should-publish', `${shouldPublish}`);
            core.notice(`shouldPublish: ${shouldPublish}`);

      - name: üè∫Publish Snapshot Artifacts
        if: ${{ steps.publish-snapshot.outputs.should-publish == 'true' }}
        run: ${{ env.gradle_cmd }} publishAllPublicationsToGhPackagesRepository
          -PsnapshotPrefix='SNAPSHOT.${{ github.run_id }}'

      - name: Check Ignore Coverage Failure
        id: ignore-coverage-failure
        if: ${{ cancelled() }}
        uses: actions/github-script@v8
        with:
          script: |
            const ignoreByLabel = ${{ contains(github.event.pull_request.labels.*.name, 'suppress-delta-coverage') }};
            const ignoreByEvent = ${{ github.event_name == 'push' }};
            const resolution = ignoreByLabel || ignoreByEvent;
            core.setOutput('result', resolution);
            if (resolution) {
              core.notice(`Coverage failure is ignored by: label=${ignoreByLabel}, event=${ignoreByEvent}`);
            }

      - name: üìàRun Delta Coverage check
        if: ${{ !cancelled() }}
        continue-on-error: ${{ steps.ignore-coverage-failure.outputs.result == 'true' }}
        env:
          COMPARE_WITH: ${{ github.base_ref || github.ref_name }}
        run: ${{ env.gradle_cmd }} deltaCoverage
          -PdiffBase="refs/remotes/origin/${COMPARE_WITH}"
          --continue

      - name: Publish Coverage Summary
        id: publish-coverage
        if: ${{ !cancelled() }}
        uses: gw-kit/delta-coverage-action@v1
        with:
          suppress-check-failures: ${{ steps.ignore-coverage-failure.outputs.result }}

      - name: Generate Token
        id: generate-token
        if: ${{ !cancelled() }}
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.BADGES_APP_ID }}
          private-key: ${{ secrets.BADGES_APP_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Update Coverage Badges
        if: ${{ !cancelled() && github.event_name == 'push' }}
        uses: ./.github/actions/update-coverage-badges
        with:
          badge-files: ${{ steps.publish-coverage.outputs.badges-dir }}
          token: ${{ steps.generate-token.outputs.token }}

      - name: üìäAdd Test Results to PR
        uses: EnricoMi/publish-unit-test-result-action@v2.20.0
        if: ${{ !cancelled() }}
        continue-on-error: true
        with:
          check_name: 'üìäTest Results'
          files:
            '**/build/test-results/*/TEST-*.xml'
